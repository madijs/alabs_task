{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [state, setState] = useState(() => {\n    try {\n      const value = localStorage.getItem(key);\n      return value ? JSON.parse(value) : initialValue;\n    } catch (e) {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    if (state) {\n      try {\n        localStorage.setItem(key, JSON.stringify(state));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [state]);\n  return [state, setState];\n};\n\n_s(useLocalStorage, \"9tkvMXjqJPsx+wo1sNvzoN0W4Lw=\");","map":{"version":3,"sources":["/Users/madibikamalov/Desktop/my-app/src/tools/useLocalStorage.tsx"],"names":["useState","useEffect","useLocalStorage","key","initialValue","state","setState","value","localStorage","getItem","JSON","parse","e","setItem","stringify","console","log"],"mappings":";;AAAA,SAAeA,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AAOA,OAAO,MAAMC,eAAe,GAAG,CAAMC,GAAN,EAAmBC,YAAnB,KAAwD;AAAA;;AACnF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAgB,MAAI;AAClD,QAAG;AACC,YAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAd;AACA,aAAOI,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAH,GAAuBH,YAAnC;AAEH,KAJD,CAIC,OAAOQ,CAAP,EAAU;AACP,aAAOR,YAAP;AACH;AACJ,GARiC,CAAlC;AAUAH,EAAAA,SAAS,CAAC,MAAI;AACV,QAAII,KAAJ,EAAU;AACN,UAAG;AACCG,QAAAA,YAAY,CAACK,OAAb,CAAqBV,GAArB,EAA0BO,IAAI,CAACI,SAAL,CAAeT,KAAf,CAA1B;AACH,OAFD,CAEC,OAAOO,CAAP,EAAU;AACPG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACH;AACJ;AACJ,GARQ,EAQP,CAACP,KAAD,CARO,CAAT;AAUA,SAAO,CAACA,KAAD,EAAOC,QAAP,CAAP;AACH,CAtBM;;GAAMJ,e","sourcesContent":["import React, {useState,useEffect} from 'react'\n\ntype ReturnType<T> = [\n    T | undefined,\n    React.Dispatch<React.SetStateAction<T | undefined>>\n]\n\nexport const useLocalStorage = <T,> (key: string, initialValue?: T) : ReturnType<T> => {\n    const [state, setState] = useState<T | undefined>(()=>{\n        try{\n            const value = localStorage.getItem(key);\n            return value ? JSON.parse(value) : initialValue;\n\n        }catch (e) {\n            return initialValue;\n        }\n    });\n\n    useEffect(()=>{\n        if (state){\n            try{\n                localStorage.setItem(key, JSON.stringify(state))\n            }catch (e) {\n                console.log(e)\n            }\n        }\n    },[state]);\n\n    return [state,setState]\n};\n\n"]},"metadata":{},"sourceType":"module"}